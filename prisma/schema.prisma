// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @id @default(autoincrement())
  // 用户名
  username  String   @unique
  // 密码
  password  String
  // 用户
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           Int           @id @default(autoincrement())
  userId       String        @unique
  // 肖像
  portrait     String?
  // 昵称
  name         String
  // 吧龄
  barAge       Float?          @default(0)
  // 性别
  gender       String?       @default("未知")
  // 发贴数量
  postCount    Int?          @default(0)
  // IP归属地
  ipLocation   String?
  // 关注的吧
  followedBars FollowedBar[] @relation(name: "FollowedBarUser")
  // 账户（只有是自己的账号才会有account）
  account      Account?
  // 发布的贴子
  posts        Post[]
  // 发布的评论
  comments     Comment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  replyFrom    Reply[]       @relation("ReplyFromUser")
  replyTo      Reply[]       @relation("ReplyToUser")
}

model Post {
  id        Int       @id @default(autoincrement())
  // 标题
  title     String
  // 内容
  content   String
  // 发布时间
  postAt    DateTime
  // 发布人
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  // 发布的吧
  bar       Bar       @relation(fields: [barId], references: [id])
  barId     Int
  // 评论
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  // 发布人
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  // 发布的贴子
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  // 评论下的回复
  replies   Reply[]
  // 评论时间
  commentAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 评论回复
model Reply {
  id         Int     @id @default(autoincrement())
  content    String
  // 发布人
  fromUser   User    @relation(fields: [fromUserId], references: [id], name: "ReplyFromUser")
  fromUserId Int
  // 接收人
  toUser     User    @relation(fields: [toUserId], references: [id], name: "ReplyToUser")
  toUserId   Int
  // 发布的评论
  comment    Comment @relation(fields: [commentId], references: [id])
  commentId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 关注的吧
model FollowedBar {
  id        Int      @id @default(autoincrement())
  // 经验值
  exp       Int
  // 等级
  level     Int
  bar       Bar      @relation(fields: [barId], references: [id])
  barId     Int
  user      User[]   @relation(name: "FollowedBarUser")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bar {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  // 关注人数
  followed     Int
  // 贴子数
  postCount    Int
  barType      BarType       @relation(fields: [barTypeId], references: [id])
  barTypeId    Int
  followedBars FollowedBar[]
  posts        Post[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// 吧类型
model BarType {
  id   Int    @id @default(autoincrement())
  name String @unique
  Bar  Bar[]
}
